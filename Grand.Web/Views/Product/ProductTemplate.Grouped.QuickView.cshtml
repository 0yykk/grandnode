@model ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@inject SeoSettings seoSettings
@{
    Layout = "";
}
<div class="product-quickview">
    <div class="modal-dialog container" role="document">
        <div class="modal-content rounded-0">
            <button type="button" class="close text-dark" data-dismiss="modal" aria-label="Close">
                <span class="quick-close"></span>
            </button>
            <div class="page product-details-page">
                    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_top", additionalData = Model.Id })
                    <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
                        <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                            <div class="col-12 product-essential px-0">
                                <div class="col d-md-inline-flex d-md-flex px-0 item-container">
                                    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_before_pictures", additionalData = Model.Id })
                                    <!--product pictures-->
                                    @await Html.PartialAsync("_ProductDetailsPictures", Model)
                                    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_after_pictures", additionalData = Model.Id })
                                    <div class="overview col-md-6 col-12">
                                        @await Html.PartialAsync("_Discontinued", Model)
                                        <div class="product-name">
                                            <h2 class="generalTitle mb-3" itemprop="name">
                                                @Model.Name
                                            </h2>
                                        </div>
                                        @if (!String.IsNullOrEmpty(Model.ShortDescription))
                                        {
                                            <div class="short-description mb-3">
                                                @Html.Raw(Model.ShortDescription)
                                            </div>
                                        }
                                        @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_overview_top", additionalData = Model.Id })
                                        <!--product reviews-->
                                        @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                                        <!--product manufacturers-->
                                        @await Html.PartialAsync("_ProductManufacturers", Model.ProductManufacturers)
                                        <!--compare, email a friend-->
                                        <div class="overview-buttons mt-3 mb-3">
                                            @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_inside_overview_buttons_before", additionalData = Model.Id })
                                            @await Html.PartialAsync("_CompareProductsButton", Model)
                                            @await Html.PartialAsync("_ProductEmailAFriendButton", Model)
                                            @await Html.PartialAsync("_ProductAskQuestionButton", Model)
                                            @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_inside_overview_buttons_after", additionalData = Model.Id })
                                        </div>
                                        @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_overview_bottom", additionalData = Model.Id })
                                    </div>
                                </div>
                            </div>

                            <div class="col-12 mt-3 mb-3 px-0">       
                                <div class="row">
                                  <div class="col-xl-3 col-lg-4 col-12">
                                    <div class="nav flex-lg-column flex-row nav-pills mb-3 mb-lg-0" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                                            <a class="nav-link active" id="v-pills-desc-tab" data-toggle="pill" href="#v-pills-desc" role="tab" aria-controls="v-pills-desc" aria-selected="true">
                                               <i class="fa fa-sticky-note d-lg-none"></i>
                                               <span class="d-none d-md-inline-block">@T("Products.Description")</span>
                                            </a>
                                         @if (Model.ProductTags.Any())
                                         {
                                            <a class="nav-link" id="v-pills-tags-tab" data-toggle="pill" href="#v-pills-tags" role="tab" aria-controls="v-pills-tags" aria-selected="false">
                                                <i class="fa fa-tags d-lg-none"></i>
                                                <span class="d-none d-md-inline-block">@T("Products.Tags")</span>
                                            </a>
                                         }
                                         @if (Model.ProductSpecifications.Any())
                                         {
                                            <a class="nav-link" id="v-pills-spec-tab" data-toggle="pill" href="#v-pills-spec" role="tab" aria-controls="v-pills-spec" aria-selected="false">
                                                <i class="fa fa-puzzle-piece d-lg-none"></i>
                                                <span class="d-none d-md-inline-block">@T("Products.Specs")</span>
                                            </a>
                                         }
                                    </div>
                                  </div>
                                  <div class="col-xl-9 col-lg-8 col-12">
                                    <div class="tab-content" id="v-pills-tabContent">
                         
                                        <div class="tab-pane fade show active" id="v-pills-desc" role="tabpanel" aria-labelledby="v-pills-desc-tab">@Html.Raw(Model.FullDescription)</div>
                          
                                        @if (Model.ProductTags.Any())
                                        {
                                            <div class="tab-pane fade" id="v-pills-tags" role="tabpanel" aria-labelledby="v-pills-tags-tab">@await Html.PartialAsync("_ProductTags", Model.ProductTags)</div>
                                        }
                                        @if (Model.ProductSpecifications.Any())
                                        {
                                            <div class="tab-pane fade" id="v-pills-spec" role="tabpanel" aria-labelledby="v-pills-spec-tab">@await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecifications)</div>
                                        }

                                    </div>
                                  </div>
                                </div>
                            </div>
                            @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_before_collateral", additionalData = Model.Id })
                            <div class="product-collateral col-12 mb-1 mt-1">
                                <div class="d-flex row">
                                    <!--associated products-->
                                    @foreach (var variant in Model.AssociatedProducts)
                                    {
                                                    <div class="col-12 associatedItem mb-3"  data-productid="@variant.Id">
                                                        <div class="flex-sm-row row">
                                                            @if (!String.IsNullOrWhiteSpace(variant.DefaultPictureModel.ImageUrl))
                                                            {
                                                                <div class="col-sm-3 col-12">
                                                                    <img class="card-img-top img-fluid" alt="@variant.DefaultPictureModel.AlternateText" src="@variant.DefaultPictureModel.ImageUrl"
                                                                         title="@variant.DefaultPictureModel.Title" id="main-product-img-@variant.Id" />
                                                                </div>
                                                            }
                                                            <div class="col-sm-9 col-12 px-sm-2">
                                                                @if (!String.IsNullOrWhiteSpace(variant.Name))
                                                                {
                                                                    <div class="variant-name">
                                                                        @variant.Name
                                                                    </div>
                                                                }
                                                                @if (!String.IsNullOrWhiteSpace(variant.ShortDescription))
                                                                {
                                                                    <div class="variant-description">
                                                                        @Html.Raw(variant.ShortDescription)
                                                                    </div>
                                                                }
                                                                <!--availability-->
                                                                @await Html.PartialAsync("_Availability", variant)
                                                                <!--SKU, MAN, GTIN, vendor-->
                                                                @await Html.PartialAsync("_SKU_Man_GTIN_Ven", variant)
                                                                <!--delivery-->
                                                                @await Html.PartialAsync("_DeliveryInfo", variant)
                                                                <!--sample download-->
                                                                @await Html.PartialAsync("_DownloadSample", variant)
                                                                <!--attributes-->
                                                                @{
                                                                    var dataDictAttributes = new ViewDataDictionary(ViewData);
                                                                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", variant.Id);
                                                                    @await Html.PartialAsync("_ProductAttributes", variant.ProductAttributes, dataDictAttributes)
                                                                }
                                                                <!--gift card-->
                                                                @{
                                                                    var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                                                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", variant.Id);
                                                                    @await Html.PartialAsync("_GiftCardInfo", variant.GiftCard, dataDictGiftCard)
                                                                }
                                                                <!--reservation info-->
                                                                @if (Model.ProductType == ProductType.Reservation)
                                                                {
                                                                    var dataDictReservation = new ViewDataDictionary(ViewData);
                                                                    dataDictReservation.TemplateInfo.HtmlFieldPrefix = string.Format("reservation_{0}", Model.Id);
                                                                    @await Html.PartialAsync("_ReservationInfo", Model, dataDictReservation)
                                                                }
                                                                <!--price breaks-->
                                                                @await Html.PartialAsync("_ProductTierPrices", variant.TierPrices)
                                                                @{
                                                                    var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                                                                }
                                                                <!--price & add to cart-->
                                                                @{
                                                                    var dataDictPrice = new ViewDataDictionary(ViewData);
                                                                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", variant.Id);
                                                                    @await Html.PartialAsync("_ProductPrice", variant.ProductPrice, dataDictPrice)
                                                                }
                                                                <div class="row mt-3 px-2">
                                                                     @{
                                                                        @await Html.PartialAsync("_AddToCartGroup", variant.AddToCart, dataDictAddToCart)
                                                                        var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                                                                        dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", variant.Id);
                                                                        @await Html.PartialAsync("_AddToWishlistGroup", variant.AddToCart, dataDictAddToWishlist)
                                                                     }
                                                                </div>
                                                            </div>
                                                        </div>
                                                </div>
                                    }

                                    @if (Model.AssociatedProducts.Count == 0)
                                    {
                                        <div class="no-associated-products">
                                            @T("Products.NoAssociatedProducts")
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
                    </form>
                    @await Component.InvokeAsync("Widget", new { widgetZone = "productdetails_bottom", additionalData = Model.Id })
                </div>
            </div>
        </div>
</div>
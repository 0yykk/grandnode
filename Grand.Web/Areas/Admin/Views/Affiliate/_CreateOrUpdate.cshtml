@model AffiliateModel
@inject IEventPublisher eventPublisher
<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />
<admin-tabstrip name="affiliate-edit">
    <items>
        <tabstrip-item text="@T("Admin.Affiliates.Info")" tab-index="0">
            <content>
                <div>
                    <partial name="_CreateOrUpdate.TabInfo" model="Model" />
                </div>
            </content>
        </tabstrip-item>
        @if (!String.IsNullOrEmpty(Model.Id))
        {
            <tabstrip-item text="@T("Admin.Affiliates.Customers")" tab-index="1">
                <content>
                    <div>
                        <partial name="_CreateOrUpdate.TabCustomers" model="Model" />
                    </div>
                </content>
            </tabstrip-item>
            <tabstrip-item text="@T("Admin.Affiliates.Orders")" tab-index="2">
                <content>
                    <div>
                        @await Component.InvokeAsync("Affiliate", new { affiliateId = Model.Id })
                    </div>
                </content>
            </tabstrip-item>
        }
    </items>
</admin-tabstrip>
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "affiliate-edit");
    await eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        <admin-tab-append tab-strip-name="affiliate-edit" tab-name="@eventBlock.tabname" tab-content="@eventBlock.content" />
    }
}
@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">
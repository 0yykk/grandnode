@model ProductModel
@inject IEventPublisher eventPublisher
<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />
<input asp-for="Ticks" type="hidden" />
<script>
    $('body').addClass('page-sidebar-closed');
    $('.page-sidebar-menu').addClass('page-sidebar-menu-closed');
    var tabPos = 'left';
    if (window.devicePixelRatio == 2)
        tabPos = 'top';
    $(document).ready(function () {
        $('#product-edit').show();
        $("#product-edit").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            tabPosition: tabPos,
            select: tabstrip_on_tab_select
        });
    });
</script>
<div id="product-edit" style="display:none">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex()) id="tab-price-product">
            @T("Admin.Catalog.Products.Prices")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Additional")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.Common.SEO")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Pictures")
        </li>
        <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.Mappings")
        </li>
        <li @Html.RenderSelectedTabIndex(6, GetSelectedTabIndex()) id="tab-inventory-product">
            @T("Admin.Catalog.Products.Inventory")
        </li>
        <li @Html.RenderSelectedTabIndex(7, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.SpecificationAttributes")
        </li>
        <li @Html.RenderSelectedTabIndex(8, GetSelectedTabIndex()) id="tab-attributes-product">
            @T("Admin.Catalog.Products.ProductAttributes")
        </li>
        <li @Html.RenderSelectedTabIndex(9, GetSelectedTabIndex()) id="tab-bundle-products">
            @T("Admin.Catalog.Products.BundleProducts")
        </li>
        <li @Html.RenderSelectedTabIndex(10, GetSelectedTabIndex()) id="tab-calendar">
            @T("Admin.Catalog.Products.Calendar")
        </li>
        <li @Html.RenderSelectedTabIndex(11, GetSelectedTabIndex()) id="tab-bids">
            @T("Admin.Catalog.Products.Bids")
        </li>
        <li @Html.RenderSelectedTabIndex(12, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.AclStores")
        </li>
        <li @Html.RenderSelectedTabIndex(13, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.RelatedProducts")
        </li>
        <li @Html.RenderSelectedTabIndex(14, GetSelectedTabIndex())>
            @T("Admin.Catalog.Products.CrossSells")
        </li>
        <li @Html.RenderSelectedTabIndex(15, GetSelectedTabIndex()) id="tab-associated-products">
            @T("Admin.Catalog.Products.AssociatedProducts")
        </li>
        @if (!String.IsNullOrEmpty(Model.Id))
        {
            <li @Html.RenderSelectedTabIndex(16, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.ActivityLog")
            </li>
            <li @Html.RenderSelectedTabIndex(17, GetSelectedTabIndex()) id="tab-purchased-product">
                @T("Admin.Catalog.Products.PurchasedWithOrders")
            </li>
            <li @Html.RenderSelectedTabIndex(18, GetSelectedTabIndex())>
                @T("Admin.Catalog.Products.Reviews")
            </li>
        }

    </ul>
    <div>
        <partial name="_CreateOrUpdate.Info" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Prices" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Additional" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.SEO" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Pictures" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Categories" model="Model" />
        <partial name="_CreateOrUpdate.Manufacturers" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Inventory" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.SpecificationAttributes" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.ProductAttributes" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.BundleProducts" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Calendar" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.Bids" model="Model" />
    </div>
    <div>
        <partial name="_TabAcl" model="Model" />
        <partial name="_TabStores" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.RelatedProducts" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.CrossSells" model="Model" />
    </div>
    <div>
        <partial name="_CreateOrUpdate.AssociatedProducts" model="Model" />
    </div>
    @if (!String.IsNullOrEmpty(Model.Id))
    {
        <div>
            @Html.Partial("_CreateOrUpdate.Activitylog", Model)
            <partial name="_CreateOrUpdate.Activitylog" model="Model" />
        </div>
        <div>
            <partial name="_CreateOrUpdate.PurchasedWithOrders" model="Model" />
        </div>
        <div>
            <partial name="_CreateOrUpdate.Reviews" model="Model" />
        </div>
    }
</div>
@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "product-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}
@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">